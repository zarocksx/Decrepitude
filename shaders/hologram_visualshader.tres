[gd_resource type="VisualShader" load_steps=14 format=2]

[ext_resource path="res://assets/ennemi/mite/Dead__000.png" type="Texture" id=1]
[ext_resource path="res://assets/shader/HologramLines_Simple.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeVectorOp" id=1]

[sub_resource type="VisualShaderNodeVectorCompose" id=2]

[sub_resource type="VisualShaderNodeScalarOp" id=3]
default_input_values = [ 0, 0.0, 1, 2.5 ]
operator = 3

[sub_resource type="VisualShaderNodeTexture" id=4]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "time"

[sub_resource type="VisualShaderNodeTexture" id=7]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeVectorOp" id=8]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=9]
operator = 2

[sub_resource type="VisualShaderNodeColorUniform" id=10]
uniform_name = "ColorUniform"

[sub_resource type="VisualShaderNodeVectorOp" id=11]
operator = 2

[resource]
code = "shader_type canvas_item;
uniform vec4 ColorUniform : hint_color;
uniform sampler2D tex_frg_14;uniform sampler2D tex_frg_5;


void vertex() {
// Sortie:0

}

void fragment() {
// ColorUniform:8
	vec3 n_out8p0;
	float n_out8p1;
	n_out8p0 = ColorUniform.rgb;
	n_out8p1 = ColorUniform.a;

// Texture:14
	vec3 n_out14p0;
	float n_out14p1;
	vec4 tex_frg_14_read = vec4(0.0);
	n_out14p0 = tex_frg_14_read.rgb;
	n_out14p1 = tex_frg_14_read.a;

// ScalarOp:13
	float n_in13p0 = 0.00000;
	float n_in13p1 = 2.50000;
	float n_out13p0;
	n_out13p0 = n_in13p0 / n_in13p1;

// VectorCompose:12
	float n_in12p0 = 0.00000;
	float n_in12p2 = 0.00000;
	vec3 n_out12p0;
	n_out12p0 = vec3( n_in12p0 , n_out13p0 , n_in12p2 );

// VectorOp:11
	vec3 n_in11p0 = vec3(0.00000,0.00000,0.00000);
	vec3 n_out11p0;
	n_out11p0 = n_in11p0 + n_out12p0;

// Texture:5
	vec3 n_out5p0;
	float n_out5p1;
	vec4 tex_frg_5_read = texture( tex_frg_5 , n_out11p0.xy );
	n_out5p0 = tex_frg_5_read.rgb;
	n_out5p1 = tex_frg_5_read.a;

// VectorOp:6
	vec3 n_out6p0;
	n_out6p0 = n_out14p0 * n_out5p0;

// VectorOp:9
	vec3 n_out9p0;
	n_out9p0 = n_out8p0 * n_out6p0;

// ScalarOp:7
	float n_out7p0;
	n_out7p0 = n_out14p1 * n_out5p1;

// Sortie:0
	COLOR.rgb = n_out9p0;
	COLOR.a = n_out7p0;

}

void light() {
// Sortie:0

}
"
graph_offset = Vector2( -531.657, -45.7974 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 620, 140 )
nodes/fragment/3/node = SubResource( 5 )
nodes/fragment/3/position = Vector2( -260, 160 )
nodes/fragment/4/node = SubResource( 6 )
nodes/fragment/4/position = Vector2( -500, 160 )
nodes/fragment/5/node = SubResource( 7 )
nodes/fragment/5/position = Vector2( 220, 240 )
nodes/fragment/6/node = SubResource( 8 )
nodes/fragment/6/position = Vector2( 220, 120 )
nodes/fragment/7/node = SubResource( 9 )
nodes/fragment/7/position = Vector2( 420, 240 )
nodes/fragment/8/node = SubResource( 10 )
nodes/fragment/8/position = Vector2( 220, 0 )
nodes/fragment/9/node = SubResource( 11 )
nodes/fragment/9/position = Vector2( 400, 100 )
nodes/fragment/11/node = SubResource( 1 )
nodes/fragment/11/position = Vector2( 20, 340 )
nodes/fragment/12/node = SubResource( 2 )
nodes/fragment/12/position = Vector2( -240, 320 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( -460, 320 )
nodes/fragment/14/node = SubResource( 4 )
nodes/fragment/14/position = Vector2( -40, 40 )
nodes/fragment/connections = PoolIntArray( 5, 0, 6, 1, 5, 1, 7, 1, 8, 0, 9, 0, 6, 0, 9, 1, 11, 0, 5, 0, 12, 0, 11, 1, 13, 0, 12, 1, 14, 1, 7, 0, 14, 0, 6, 0, 7, 0, 0, 1, 9, 0, 0, 0 )
